//Controller
package mvc;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.mongodb.repository.Query;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

@RestController
public class Controller {
	
	@Autowired
	OrderRepo repos;
	
	@PostMapping("/order")
	public void placeOrder( @RequestBody Order order ) {
		repos.insert( order );
	}
	
	@GetMapping("/all")
	public List<Order> showAllOrders() {
		return repos.findAll();		
	}
	
	@GetMapping("/order/{itemName}")
	public Order findOrder ( @PathVariable String itemName ){
		return repos.findOrdersByName( itemName );
	}
	
	@PutMapping("/update/{id}")
    public String updateOrder(@RequestBody Order order, @PathVariable String id) {
        order.setId( id );
        repos.save(order);
        return ("Updated Successfully");
    }
		
	@GetMapping("/delete/{id}")
	public String deleteOrder( @PathVariable String id )	{
		repos.deleteById( id );
		return ("Deleted Successfully");
	}
	
}



//order
package mvc;
import org.springframework.data.annotation.Id;
import org.springframework.data.mongodb.core.mapping.Document;


@Document
public class Order {
	
	@Id
	private String id;
	private String itemName;
	private int itemQuantity;
	private double cost;
	
	public String getId() {
		return id;
	}

	public void setId(String id) {
		this.id = id;
	}

	public String getItemName() {
		return itemName;
	}

	public void setItemName(String itemName) {
		this.itemName = itemName;
	}

	public int getItemQuantity() {
		return itemQuantity;
	}

	public void setItemQuantity(int itemQuantity) {
		this.itemQuantity = itemQuantity;
	}

	public double getCost() {
		return cost;
	}

	public void setCost(double cost) {
		this.cost = cost;
	}
	
	public Order(String id, String itemName, int itemQuantity, double cost) {
		super();
		this.id = id;
		this.itemName = itemName;
		this.itemQuantity = itemQuantity;
		this.cost = cost;
	}

	
}

//order.repo


package mvc;
import org.springframework.data.mongodb.repository.MongoRepository;
import org.springframework.data.mongodb.repository.Query;

public interface OrderRepo extends MongoRepository< Order, String > {
	
	@Query("{ 'itemName' : ?0 }")
	Order findOrdersByName(String itemName);

}
//Qt77application


import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;

@SpringBootApplication
public class Qt7Application {

	public static void main(String[] args) {
		SpringApplication.run(Qt7Application.class, args);
	}

}
